{"version":3,"file":"static/js/434.56af3c8a.chunk.js","mappings":"oOA+BA,EA3BgB,WACd,IACA,ECH6B,SAAAA,GAC7B,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAKA,OAHAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAoBL,GAASM,MAAK,SAAAC,GAAI,OAAIJ,EAAgBI,EAApB,GACvC,GAAE,CAACP,IACG,CAAEE,aAAAA,EACV,CDJ0BM,EADLC,EAAAA,EAAAA,MAAZT,SACAE,EAAR,EAAQA,aAER,OACE,2BAC4B,KAAb,OAAZA,QAAY,IAAZA,OAAA,EAAAA,EAAcQ,UACb,uBAAG,8CAEL,wBACGR,EAAaS,KAAI,SAAAC,GAChB,OACE,2BACE,yBAAG,WAASA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GAKnB,QAIR,C,+LEvBDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,4CAEHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,6BAAgCC,IAD9B,cACnBE,EADmB,yBAElBA,EAASZ,KAAKa,QAAQT,KAAI,YAC/B,MAAO,CAAEI,GADyC,EAAhBA,GACrBM,MADqC,EAAZA,MAEvC,KAJwB,2CAAH,qDAOXC,EAAY,mCAAG,WAAMC,GAAN,uFACHP,EAAAA,EAAAA,IAAA,uBACLC,EADK,kBACYM,EADZ,2BADG,cACpBJ,EADoB,yBAInBA,EAASZ,KAAKa,QAAQT,KAAI,YAC/B,MAAO,CAAEI,GADyC,EAAhBA,GACrBM,MADqC,EAAZA,MAEvC,KANyB,2CAAH,sDASZG,EAAe,mCAAG,WAAMxB,GAAN,uFACNgB,EAAAA,EAAAA,IAAA,iBACXhB,GADW,OACDiB,EADC,oBADM,cACvBE,EADuB,yBAItBA,EAASZ,MAJa,2CAAH,sDAOfkB,EAAe,mCAAG,WAAMzB,GAAN,uFACNgB,EAAAA,EAAAA,IAAA,iBACXhB,EADW,mBACOiB,EADP,oBADM,cACvBE,EADuB,yBAKtBA,EAASZ,KAAKmB,KAAKf,KAAI,YAC5B,MAAO,CACLgB,KAFqE,EAAxCA,KAG7BC,UAHqE,EAAlCA,UAInCC,aAJqE,EAAvBA,aAK9Cd,GALqE,EAATA,GAO/D,KAZ4B,2CAAH,sDAefe,EAAe,mCAAG,WAAM9B,GAAN,uFACNgB,EAAAA,EAAAA,IAAA,iBACXhB,EADW,mBACOiB,EADP,2BADM,cACvBE,EADuB,yBAItBA,EAASZ,KAAKa,QAAQT,KAAI,YAC/B,MAAO,CAAEE,OADmD,EAA1BA,OACjBC,QAD2C,EAAlBA,QAChBC,GADkC,EAATA,GAEpD,KAN4B,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","utils/hooks/useMovieReviews.jsx","utils/api/apiMovieDB.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useMovieReviews } from 'utils/hooks/useMovieReviews';\nimport PropTypes from 'prop-types';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const { movieReviews } = useMovieReviews(movieId);\n\n  return (\n    <div>\n      {movieReviews?.length === 0 && (\n        <p>We don't have any reviews for this movie</p>\n      )}\n      <ul>\n        {movieReviews.map(review => {\n          return (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  movieId: PropTypes.string,\n};\n\nexport default Reviews;\n","import * as API from '../api/apiMovieDB';\nimport { useState, useEffect } from 'react';\n\nexport const useMovieReviews = movieId => {\n  const [movieReviews, setMovieReviews] = useState([]);\n\n  useEffect(() => {\n    API.getMovieReviews(movieId).then(data => setMovieReviews(data));\n  }, [movieId]);\n  return { movieReviews };\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=11517d6931d2b5137dd13eb45c72b984';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day${API_KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\nexport const searchMovies = async inputValue => {\n  const response = await axios.get(\n    `/search/movie${API_KEY}&query=${inputValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return { author, content, id };\n  });\n};\n"],"names":["movieId","useState","movieReviews","setMovieReviews","useEffect","API","then","data","useMovieReviews","useParams","length","map","review","author","content","id","axios","API_KEY","getTrending","response","results","title","searchMovies","inputValue","getMovieDetails","getMovieCredits","cast","name","character","profile_path","getMovieReviews"],"sourceRoot":""}