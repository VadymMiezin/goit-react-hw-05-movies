{"version":3,"file":"static/js/758.c724c0a2.chunk.js","mappings":"oOAqCA,EAjCa,WACX,IACA,ECH6B,SAAAA,GAC7B,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAKA,OAHAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAoBL,GAASM,MAAK,SAAAC,GAAI,OAAIJ,EAAgBI,EAApB,GACvC,GAAE,CAACP,IACG,CAAEE,aAAAA,EACV,CDJ0BM,EADLC,EAAAA,EAAAA,MAAZT,SACAE,EAAR,EAAQA,aAER,OACE,0BACE,wBACGA,EAAaQ,KAAI,SAAAC,GAChB,OACE,2BACE,gBACEC,MAAO,IACPC,IACEF,EAAKG,aAAL,0DACuDH,EAAKG,cAD5D,qFAIFC,IAAKJ,EAAKK,QAEZ,uBAAIL,EAAKK,QACT,yBAAG,cAAYL,EAAKM,eAXbN,EAAKO,GAcjB,OAIR,C,+LE7BDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,4CAEHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,6BAAgCC,IAD9B,cACnBE,EADmB,yBAElBA,EAASf,KAAKgB,QAAQb,KAAI,YAC/B,MAAO,CAAEQ,GADyC,EAAhBA,GACrBM,MADqC,EAAZA,MAEvC,KAJwB,2CAAH,qDAOXC,EAAY,mCAAG,WAAMC,GAAN,uFACHP,EAAAA,EAAAA,IAAA,uBACLC,EADK,kBACYM,EADZ,2BADG,cACpBJ,EADoB,yBAInBA,EAASf,KAAKgB,QAAQb,KAAI,YAC/B,MAAO,CAAEQ,GADyC,EAAhBA,GACrBM,MADqC,EAAZA,MAEvC,KANyB,2CAAH,sDASZG,EAAe,mCAAG,WAAM3B,GAAN,uFACNmB,EAAAA,EAAAA,IAAA,iBACXnB,GADW,OACDoB,EADC,oBADM,cACvBE,EADuB,yBAItBA,EAASf,MAJa,2CAAH,sDAOfqB,EAAe,mCAAG,WAAM5B,GAAN,uFACNmB,EAAAA,EAAAA,IAAA,iBACXnB,EADW,mBACOoB,EADP,oBADM,cACvBE,EADuB,yBAKtBA,EAASf,KAAKI,KAAKD,KAAI,YAC5B,MAAO,CACLM,KAFqE,EAAxCA,KAG7BC,UAHqE,EAAlCA,UAInCH,aAJqE,EAAvBA,aAK9CI,GALqE,EAATA,GAO/D,KAZ4B,2CAAH,sDAefW,EAAe,mCAAG,WAAM7B,GAAN,uFACNmB,EAAAA,EAAAA,IAAA,iBACXnB,EADW,mBACOoB,EADP,2BADM,cACvBE,EADuB,yBAItBA,EAASf,KAAKgB,QAAQb,KAAI,YAC/B,MAAO,CAAEoB,OADmD,EAA1BA,OACjBC,QAD2C,EAAlBA,QAChBb,GADkC,EAATA,GAEpD,KAN4B,2CAAH,qD","sources":["components/Cast/Cast.jsx","utils/hooks/useMovieCredit.jsx","utils/api/apiMovieDB.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useMovieCredits } from 'utils/hooks/useMovieCredit';\nimport PropTypes from 'prop-types';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const { movieCredits } = useMovieCredits(movieId);\n\n  return (\n    <div>\n      <ul>\n        {movieCredits.map(cast => {\n          return (\n            <li key={cast.id}>\n              <img\n                width={100}\n                src={\n                  cast.profile_path\n                    ? `https://image.tmdb.org/t/p/w300_and_h450_bestv2/${cast.profile_path}`\n                    : `https://upload.wikimedia.org/wikipedia/commons/2/2b/No-Photo-Available-240x300.jpg`\n                }\n                alt={cast.name}\n              />\n              <p>{cast.name}</p>\n              <p>Character: {cast.character}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nCast.propTypes = {\n  movieId: PropTypes.string,\n};\n\nexport default Cast;\n","import * as API from '../api/apiMovieDB';\nimport { useState, useEffect } from 'react';\n\nexport const useMovieCredits = movieId => {\n  const [movieCredits, setMovieCredits] = useState([]);\n\n  useEffect(() => {\n    API.getMovieCredits(movieId).then(data => setMovieCredits(data));\n  }, [movieId]);\n  return { movieCredits };\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=11517d6931d2b5137dd13eb45c72b984';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day${API_KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\nexport const searchMovies = async inputValue => {\n  const response = await axios.get(\n    `/search/movie${API_KEY}&query=${inputValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return { author, content, id };\n  });\n};\n"],"names":["movieId","useState","movieCredits","setMovieCredits","useEffect","API","then","data","useMovieCredits","useParams","map","cast","width","src","profile_path","alt","name","character","id","axios","API_KEY","getTrending","response","results","title","searchMovies","inputValue","getMovieDetails","getMovieCredits","getMovieReviews","author","content"],"sourceRoot":""}