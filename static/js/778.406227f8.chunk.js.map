{"version":3,"file":"static/js/778.406227f8.chunk.js","mappings":"4OA8DA,EA3DyB,WAAO,IAAD,IAE7B,ECF6B,SAAAA,GAC7B,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAoBL,GAASM,MAAK,SAAAC,GAAI,OAAIJ,EAAgBI,EAApB,GACvC,GAAE,CAACP,IAEG,CAAEE,aAAAA,EACV,CDN0BM,EADLC,EAAAA,EAAAA,MAAZT,SACAE,EAAR,EAAQA,aAGFQ,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE7C,OACE,4BACE,UAAC,KAAD,CAAMC,GAAIJ,EAAV,UACG,KACD,mBAAQK,KAAK,SAAb,SAAsB,gBAGxB,0BACGb,EAAac,MAAM,KACnBd,EAAae,aACVf,EAAae,aAAaC,UAAU,EAAG,GACvC,GAAG,QAIT,gBACEC,IAAG,yDAAoDjB,EAAakB,aACpEC,IAAI,mCAGN,yBAAG,cACW,IACXnB,EAAaoB,aACVC,KAAKC,OAAmC,GAA5BtB,EAAaoB,cAAmBG,QAAQ,GACpD,GAAG,QAGT,wBAAI,cACJ,uBAAIvB,EAAawB,YAEjB,wBAAI,YACJ,uBACGxB,EAAayB,OACVzB,EAAayB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,KAClD,MAGN,uBAAG,4BAEH,2BACE,yBACE,SAAC,KAAD,CAAMjB,GAAG,OAAT,SAAgB,YAElB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,kBAGvB,SAAC,KAAD,MAGL,C,+LE1DDkB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,4CAEHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,6BAAgCC,IAD9B,cACnBE,EADmB,yBAElBA,EAAS5B,KAAK6B,QAAQR,KAAI,YAC/B,MAAO,CAAES,GADyC,EAAhBA,GACrBrB,MADqC,EAAZA,MAEvC,KAJwB,2CAAH,qDAOXsB,EAAY,mCAAG,WAAMC,GAAN,uFACHP,EAAAA,EAAAA,IAAA,uBACLC,EADK,kBACYM,EADZ,2BADG,cACpBJ,EADoB,yBAInBA,EAAS5B,KAAK6B,QAAQR,KAAI,YAC/B,MAAO,CAAES,GADyC,EAAhBA,GACrBrB,MADqC,EAAZA,MAEvC,KANyB,2CAAH,sDASZwB,EAAe,mCAAG,WAAMxC,GAAN,uFACNgC,EAAAA,EAAAA,IAAA,iBACXhC,GADW,OACDiC,EADC,oBADM,cACvBE,EADuB,yBAItBA,EAAS5B,MAJa,2CAAH,sDAOfkC,EAAe,mCAAG,WAAMzC,GAAN,uFACNgC,EAAAA,EAAAA,IAAA,iBACXhC,EADW,mBACOiC,EADP,oBADM,cACvBE,EADuB,yBAKtBA,EAAS5B,KAAKmC,KAAKd,KAAI,YAC5B,MAAO,CACLE,KAFqE,EAAxCA,KAG7Ba,UAHqE,EAAlCA,UAInCC,aAJqE,EAAvBA,aAK9CP,GALqE,EAATA,GAO/D,KAZ4B,2CAAH,sDAefQ,EAAe,mCAAG,WAAM7C,GAAN,uFACNgC,EAAAA,EAAAA,IAAA,iBACXhC,EADW,mBACOiC,EADP,2BADM,cACvBE,EADuB,yBAItBA,EAAS5B,KAAK6B,QAAQR,KAAI,YAC/B,MAAO,CAAEkB,OADmD,EAA1BA,OACjBC,QAD2C,EAAlBA,QAChBV,GADkC,EAATA,GAEpD,KAN4B,2CAAH,qD","sources":["pages/MovieDetailsPage.jsx","utils/hooks/useMovieDetails.jsx","utils/api/apiMovieDB.jsx"],"sourcesContent":["import { Outlet, Link, useParams, useLocation } from 'react-router-dom';\nimport { useMovieDetails } from 'utils/hooks/useMovieDetails';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const { movieDetails } = useMovieDetails(movieId);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <div>\n      <Link to={backLinkHref}>\n        {' '}\n        <button type=\"button\">Go back</button>\n      </Link>\n\n      <h2>\n        {movieDetails.title} (\n        {movieDetails.release_date\n          ? movieDetails.release_date.substring(0, 4)\n          : ''}\n        )\n      </h2>\n\n      <img\n        src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2${movieDetails.poster_path}`}\n        alt=\"{movieDetails.original_title}\"\n      />\n\n      <p>\n        User Score:{' '}\n        {movieDetails.vote_average\n          ? Math.fround(movieDetails.vote_average * 10).toFixed(0)\n          : ''}\n        %\n      </p>\n      <h3>Overview</h3>\n      <p>{movieDetails.overview}</p>\n\n      <h4>Genres</h4>\n      <p>\n        {movieDetails.genres\n          ? movieDetails.genres.map(genre => genre.name).join(' ')\n          : ''}\n      </p>\n\n      <p>Additional information</p>\n\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import * as API from '../api/apiMovieDB';\nimport { useState, useEffect } from 'react';\n\nexport const useMovieDetails = movieId => {\n  const [movieDetails, setMovieDetails] = useState([]);\n\n  useEffect(() => {\n    API.getMovieDetails(movieId).then(data => setMovieDetails(data));\n  }, [movieId]);\n\n  return { movieDetails };\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=11517d6931d2b5137dd13eb45c72b984';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day${API_KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\nexport const searchMovies = async inputValue => {\n  const response = await axios.get(\n    `/search/movie${API_KEY}&query=${inputValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return { author, content, id };\n  });\n};\n"],"names":["movieId","useState","movieDetails","setMovieDetails","useEffect","API","then","data","useMovieDetails","useParams","backLinkHref","useLocation","state","from","to","type","title","release_date","substring","src","poster_path","alt","vote_average","Math","fround","toFixed","overview","genres","map","genre","name","join","axios","API_KEY","getTrending","response","results","id","searchMovies","inputValue","getMovieDetails","getMovieCredits","cast","character","profile_path","getMovieReviews","author","content"],"sourceRoot":""}