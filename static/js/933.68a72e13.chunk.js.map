{"version":3,"file":"static/js/933.68a72e13.chunk.js","mappings":"oMAEaA,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,0BACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,SAFFL,EAAME,GADA,OAUxB,C,oHCJD,EAViB,WACf,MCD6B,WAC7B,OAA4CI,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAAkBC,MAAK,SAAAC,GAAI,OAAIJ,EAAkBI,EAAtB,GAC5B,GAAE,IAEI,CAAEL,eAAAA,EACV,CDP4BM,GAAnBN,EAAR,EAAQA,eAER,OACE,0BACE,SAACZ,EAAA,EAAD,CAAcC,OAAQW,KAG3B,C,+LETDO,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,4CAEHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,6BAAgCC,IAD9B,cACnBE,EADmB,yBAElBA,EAASL,KAAKM,QAAQnB,KAAI,YAC/B,MAAO,CAAEG,GADyC,EAAhBA,GACrBG,MADqC,EAAZA,MAEvC,KAJwB,2CAAH,qDAOXc,EAAY,mCAAG,WAAMC,GAAN,uFACHN,EAAAA,EAAAA,IAAA,uBACLC,EADK,kBACYK,EADZ,2BADG,cACpBH,EADoB,yBAInBA,EAASL,KAAKM,QAAQnB,KAAI,YAC/B,MAAO,CAAEG,GADyC,EAAhBA,GACrBG,MADqC,EAAZA,MAEvC,KANyB,2CAAH,sDASZgB,EAAe,mCAAG,WAAMC,GAAN,uFACNR,EAAAA,EAAAA,IAAA,iBACXQ,GADW,OACDP,EADC,oBADM,cACvBE,EADuB,yBAItBA,EAASL,MAJa,2CAAH,sDAOfW,EAAe,mCAAG,WAAMD,GAAN,uFACNR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,mBACOP,EADP,oBADM,cACvBE,EADuB,yBAKtBA,EAASL,KAAKY,KAAKzB,KAAI,YAC5B,MAAO,CACL0B,KAFqE,EAAxCA,KAG7BC,UAHqE,EAAlCA,UAInCC,aAJqE,EAAvBA,aAK9CzB,GALqE,EAATA,GAO/D,KAZ4B,2CAAH,sDAef0B,EAAe,mCAAG,WAAMN,GAAN,uFACNR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,mBACOP,EADP,2BADM,cACvBE,EADuB,yBAItBA,EAASL,KAAKM,QAAQnB,KAAI,YAC/B,MAAO,CAAE8B,OADmD,EAA1BA,OACjBC,QAD2C,EAAlBA,QAChB5B,GADkC,EAATA,GAEpD,KAN4B,2CAAH,qD","sources":["components/TrendingList/TrendingList.jsx","pages/HomePage.jsx","utils/hooks/useTrendingList.jsx","utils/api/apiMovieDB.jsx"],"sourcesContent":["import { useLocation, Link } from 'react-router-dom';\n\nexport const TrendingList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { useTrendingList } from 'utils/hooks/useTrendingList';\nimport { TrendingList } from 'components/TrendingList/TrendingList';\n\nconst HomePage = () => {\n  const { trendingMovies } = useTrendingList();\n\n  return (\n    <div>\n      <TrendingList movies={trendingMovies} />\n    </div>\n  );\n};\n\nexport default HomePage;\n","import * as API from '../api/apiMovieDB';\nimport { useState, useEffect } from 'react';\n\nexport const useTrendingList = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  useEffect(() => {\n    API.getTrending().then(data => setTrendingMovies(data));\n  }, []);\n\n  return { trendingMovies };\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=11517d6931d2b5137dd13eb45c72b984';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day${API_KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\nexport const searchMovies = async inputValue => {\n  const response = await axios.get(\n    `/search/movie${API_KEY}&query=${inputValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return { author, content, id };\n  });\n};\n"],"names":["TrendingList","movies","location","useLocation","map","movie","to","id","state","from","title","useState","trendingMovies","setTrendingMovies","useEffect","API","then","data","useTrendingList","axios","API_KEY","getTrending","response","results","searchMovies","inputValue","getMovieDetails","movieId","getMovieCredits","cast","name","character","profile_path","getMovieReviews","author","content"],"sourceRoot":""}