{"version":3,"file":"static/js/149.a3908d3f.chunk.js","mappings":"oMAEaA,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,0BACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,SAFFL,EAAME,GADA,OAUxB,C,4HCZYI,EAAa,WACxB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeY,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAeA,OAPAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAaH,EAAaI,IAAI,SAChCD,GACFE,EAAAA,GAAiBF,GAAYG,MAAK,SAAAC,GAAI,OAAIT,EAAUS,EAAd,GAEzC,GAAE,CAACP,KAGF,4BACE,kBAAMQ,SAfW,SAAAC,GACnBR,EAAgB,CAAES,MAAOD,EAAEE,OAAO,GAAGC,QACrCH,EAAEI,gBAEH,EAWG,WACE,kBAAOC,KAAK,OAAOC,YAAY,2BAC/B,mBAAQD,KAAK,SAAb,SAAsB,eAExB,SAAC7B,EAAA,EAAD,CAAcC,OAAQA,MAG3B,ECzBD,EAJe,WACb,OAAO,SAACU,EAAD,GACR,C,+LCFDoB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,4CAEHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,6BAAgCC,IAD9B,cACnBE,EADmB,yBAElBA,EAASZ,KAAKa,QAAQ/B,KAAI,YAC/B,MAAO,CAAEG,GADyC,EAAhBA,GACrBG,MADqC,EAAZA,MAEvC,KAJwB,2CAAH,qDAOX0B,EAAY,mCAAG,WAAMC,GAAN,uFACHN,EAAAA,EAAAA,IAAA,uBACLC,EADK,kBACYK,EADZ,2BADG,cACpBH,EADoB,yBAInBA,EAASZ,KAAKa,QAAQ/B,KAAI,YAC/B,MAAO,CAAEG,GADyC,EAAhBA,GACrBG,MADqC,EAAZA,MAEvC,KANyB,2CAAH,sDASZ4B,EAAe,mCAAG,WAAMC,GAAN,uFACNR,EAAAA,EAAAA,IAAA,iBACXQ,GADW,OACDP,EADC,oBADM,cACvBE,EADuB,yBAItBA,EAASZ,MAJa,2CAAH,sDAOfkB,EAAe,mCAAG,WAAMD,GAAN,uFACNR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,mBACOP,EADP,oBADM,cACvBE,EADuB,yBAKtBA,EAASZ,KAAKmB,KAAKrC,KAAI,YAC5B,MAAO,CACLsC,KAFqE,EAAxCA,KAG7BC,UAHqE,EAAlCA,UAInCC,aAJqE,EAAvBA,aAK9CrC,GALqE,EAATA,GAO/D,KAZ4B,2CAAH,sDAefsC,EAAe,mCAAG,WAAMN,GAAN,uFACNR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,mBACOP,EADP,2BADM,cACvBE,EADuB,yBAItBA,EAASZ,KAAKa,QAAQ/B,KAAI,YAC/B,MAAO,CAAE0C,OADmD,EAA1BA,OACjBC,QAD2C,EAAlBA,QAChBxC,GADkC,EAATA,GAEpD,KAN4B,2CAAH,qD","sources":["components/TrendingList/TrendingList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","utils/api/apiMovieDB.jsx"],"sourcesContent":["import { useLocation, Link } from 'react-router-dom';\n\nexport const TrendingList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport * as API from '../../utils/api/apiMovieDB';\nimport { useState, useEffect } from 'react';\nimport { TrendingList } from 'components/TrendingList/TrendingList';\n\nexport const SearchForm = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleSubmit = e => {\n    setSearchParams({ query: e.target[0].value });\n    e.preventDefault();\n    return;\n  };\n\n  useEffect(() => {\n    const movieTitle = searchParams.get('query');\n    if (movieTitle) {\n      API.searchMovies(movieTitle).then(data => setMovies(data));\n    }\n  }, [searchParams]);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" placeholder=\"Type title for search\"></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      <TrendingList movies={movies} />\n    </div>\n  );\n};\n","import { SearchForm } from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  return <SearchForm />;\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=11517d6931d2b5137dd13eb45c72b984';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day${API_KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\nexport const searchMovies = async inputValue => {\n  const response = await axios.get(\n    `/search/movie${API_KEY}&query=${inputValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return { author, content, id };\n  });\n};\n"],"names":["TrendingList","movies","location","useLocation","map","movie","to","id","state","from","title","SearchForm","useState","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","movieTitle","get","API","then","data","onSubmit","e","query","target","value","preventDefault","type","placeholder","axios","API_KEY","getTrending","response","results","searchMovies","inputValue","getMovieDetails","movieId","getMovieCredits","cast","name","character","profile_path","getMovieReviews","author","content"],"sourceRoot":""}